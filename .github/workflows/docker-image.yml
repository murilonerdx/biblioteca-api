name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: 12345
          MONGO_INITDB_DATABASE: library
        # Removendo a opção options para simplificar e ver se resolve o problema de inicialização.

    steps:
      - uses: actions/checkout@v3

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag biblioteca-logica:latest

      - name: Run container from the image
        run: |
          docker run --name app -d biblioteca-logica:latest
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag name
        id: tag_name
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}

      - name: Determine the Image Tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            TAG=${GITHUB_REF#refs/heads/}
            TAG="${TAG//\//-}"  # Substitui '/' por '-' no nome do branch para compatibilidade com tags Docker
          else
            TAG="latest"
          fi
          echo "IMAGE_TAG=${{ github.repository_owner }}/biblioteca-logica:$TAG" >> $GITHUB_ENV

      - name: List files
        run: ls -la
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

      - name: Build and push Docker image
        run: |
          docker build -f Dockerfile . --tag $IMAGE_TAG
          docker push $IMAGE_TAG
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
